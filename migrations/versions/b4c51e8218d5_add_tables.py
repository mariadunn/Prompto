"""Add tables

Revision ID: b4c51e8218d5
Revises: 
Create Date: 2022-07-24 22:46:56.016584

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b4c51e8218d5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('prompt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('hints', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('participants', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_prompt'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('story',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('prompt_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('text', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['prompt_id'], ['prompt.id'], name=op.f('fk_story_prompt_id_prompt')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_story_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_story'))
    )
    with op.batch_alter_table('story', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_story_text'), ['text'], unique=False)
        batch_op.create_index(batch_op.f('ix_story_title'), ['title'], unique=False)

    op.create_table('world',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_world_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_world'))
    )
    with op.batch_alter_table('world', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_world_name'), ['name'], unique=False)

    op.create_table('character',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('world_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_character_user_id_user')),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], name=op.f('fk_character_world_id_world')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_character'))
    )
    with op.batch_alter_table('character', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_character_name'), ['name'], unique=False)

    op.create_table('relatives_character',
    sa.Column('relative_a', sa.Integer(), nullable=True),
    sa.Column('relative_b', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['relative_a'], ['character.id'], name=op.f('fk_relatives_character_relative_a_character')),
    sa.ForeignKeyConstraint(['relative_b'], ['character.id'], name=op.f('fk_relatives_character_relative_b_character'))
    )
    op.create_table('story_character',
    sa.Column('story_id', sa.Integer(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], name=op.f('fk_story_character_character_id_character')),
    sa.ForeignKeyConstraint(['story_id'], ['story.id'], name=op.f('fk_story_character_story_id_story'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('story_character')
    op.drop_table('relatives_character')
    with op.batch_alter_table('character', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_character_name'))

    op.drop_table('character')
    with op.batch_alter_table('world', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_world_name'))

    op.drop_table('world')
    with op.batch_alter_table('story', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_story_title'))
        batch_op.drop_index(batch_op.f('ix_story_text'))

    op.drop_table('story')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('prompt')
    # ### end Alembic commands ###
